from _mini_modules import iroot
from Crypto.Util.number import long_to_bytes
N = 29331922499794985782735976045591164936683059380558950386560160105740343201513369939006307531165922708949619162698623675349030430859547825708994708321803705309459438099340427770580064400911431856656901982789948285309956111848686906152664473350940486507451771223435835260168971210087470894448460745593956840586530527915802541450092946574694809584880896601317519794442862977471129319781313161842056501715040555964011899589002863730868679527184420789010551475067862907739054966183120621407246398518098981106431219207697870293412176440482900183550467375190239898455201170831410460483829448603477361305838743852756938687673
e = 3
ciphertext = 2205316413931134031074603746928247799030155221252519872649649212867614751848436763801274360463406171277838056821437115883619169702963504606017565783537203207707757768473109845162808575425972525116337319108047893250549462147185741761825125 

# RSA: (Message ** e) mod N = ciphertext find M = ?
# M ** e = t * N + c
# ==> M = iroot(Nt+c,e)

for i in range(10000):
    m,check = iroot(N*i+ciphertext,e)
    if check == True:
        message = long_to_bytes(m).decode().strip()
        print(message) # picoCTF{n33d_a_lArg3r_e_606ce004}
        break